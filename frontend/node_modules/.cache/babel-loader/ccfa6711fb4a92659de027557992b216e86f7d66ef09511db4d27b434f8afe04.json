{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caden Otis\\\\COM-S-319-Assignments\\\\assignment_3\\\\frontend\\\\src\\\\Products.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Products() {\n  _s();\n  const [theProducts, setTheProducts] = useState([]);\n  useEffect(() => {\n    // Read the data of robots from the database:\n    fetch(\"http://localhost:8081/listProducts\").then(response => response.json()).then(products => setTheProducts(products));\n  }, []); // the empty brackets here means that useEffect() will only run on the first render\n\n  // fetches one robot that matches the input in the search bar\n  function getInputRobot() {\n    fetch(\"http://localhost:8081/listRobots\").then(response => response.json()).then(robots => loadRobots(robots));\n    let robotName = document.forms[\"my_form\"][\"inputRobotName\"];\n    let inputRobotName = robotName.value;\n    function loadRobots(robots) {\n      var mainContainer = document.getElementById(\"searchedRobot\");\n      for (var i = 0; i < robots.length; i++) {\n        if (robots[i].name === inputRobotName) {\n          let id = robots[i].id;\n          let price = robots[i].price;\n          let description = robots[i].description;\n          let name = robots[i].name;\n          let image = robots[i].imageUrl;\n          division.innerHTML = `\n                    <br></br>\n                    <p><u><b>Rquested Robot via Search:</b></u></p>\n                    <div class=\"card shadow-sm\">\n                        <img src=${image} class=\"card-img-top\" alt=${name} width=\"10\"></img>\n                        <div class=\"card-body\">\n                            <p class=\"card-text\"> ${id}. <strong>${name}</strong> $${price}</p>\n                            <p>${description}</p>\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                            </div>\n                        </div>\n                    </div>\n                `;\n          mainContainer.append(division);\n\n          //clears the value in the form to make it a little easier to type in a new movie name\n          robotName.value = \"\";\n        }\n        // clears the \"One Robot\" view if nothing is in the form and the search button is pressed\n        if (inputRobotName === \"\") {\n          division.innerHTML = ``;\n          mainContainer.append(division);\n\n          //clears the value in the form to make it a little easier to type in a new movie name\n          robotName.value = \"\";\n        }\n      }\n    }\n  }\n  const ShowProducts = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: theProducts.map(product =>\n        /*#__PURE__*/\n        // map reads the whole theProducts array element-by-element\n        _jsxDEV(\"div\", {\n          className: \"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: product.image,\n              className: \"card-img-top\",\n              alt: product.title,\n              style: {\n                objectFit: 'cover',\n                height: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: product.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  textAlign: \"center\",\n                  fontSize: \"20px\",\n                  color: \"green\"\n                },\n                children: [\"$\", product.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 62\n                }, this), \" - \", product.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Tag\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 62\n                }, this), \" - \", product.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Rating:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 62\n                }, this), \" \", product.rating.rate, \" from \", product.rating.count, \" people\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: \"inline-block\"\n        },\n        children: [\"Product id: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"inputProductName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onclick: \"getInputRobot();\",\n        children: \"One Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ShowProducts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 13\n  }, this);\n}\n_s(Products, \"r+NVqgUoINPFiBxGM8A7oN9zSwc=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Products","_s","theProducts","setTheProducts","fetch","then","response","json","products","getInputRobot","robots","loadRobots","robotName","document","forms","inputRobotName","value","mainContainer","getElementById","i","length","name","id","price","description","image","imageUrl","division","innerHTML","append","ShowProducts","className","children","map","product","src","alt","title","style","objectFit","height","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","fontSize","color","category","rating","rate","count","display","type","onclick","_c","$RefreshReg$"],"sources":["C:/Users/Caden Otis/COM-S-319-Assignments/assignment_3/frontend/src/Products.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction Products() {\r\n    const [theProducts, setTheProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Read the data of robots from the database:\r\n        fetch(\"http://localhost:8081/listProducts\")\r\n            .then(response => response.json())\r\n            .then(products => setTheProducts(products));\r\n\r\n    }, []); // the empty brackets here means that useEffect() will only run on the first render\r\n\r\n    // fetches one robot that matches the input in the search bar\r\n    function getInputRobot() {\r\n        fetch(\"http://localhost:8081/listRobots\")\r\n            .then(response => response.json())\r\n            .then(robots => loadRobots(robots));\r\n\r\n        let robotName = document.forms[\"my_form\"][\"inputRobotName\"];\r\n        let inputRobotName = robotName.value;\r\n\r\n        function loadRobots(robots) {\r\n            var mainContainer = document.getElementById(\"searchedRobot\");\r\n\r\n            for (var i = 0; i < robots.length; i++) {\r\n                if (robots[i].name === inputRobotName) {\r\n                    let id = robots[i].id;\r\n                    let price = robots[i].price;\r\n                    let description = robots[i].description;\r\n                    let name = robots[i].name;\r\n                    let image = robots[i].imageUrl;\r\n\r\n                    division.innerHTML = `\r\n                    <br></br>\r\n                    <p><u><b>Rquested Robot via Search:</b></u></p>\r\n                    <div class=\"card shadow-sm\">\r\n                        <img src=${image} class=\"card-img-top\" alt=${name} width=\"10\"></img>\r\n                        <div class=\"card-body\">\r\n                            <p class=\"card-text\"> ${id}. <strong>${name}</strong> $${price}</p>\r\n                            <p>${description}</p>\r\n                            <div class=\"d-flex justify-content-between align-items-center\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n\r\n                    mainContainer.append(division);\r\n\r\n                    //clears the value in the form to make it a little easier to type in a new movie name\r\n                    robotName.value = \"\";\r\n                }\r\n                // clears the \"One Robot\" view if nothing is in the form and the search button is pressed\r\n                if (inputRobotName === \"\") {\r\n                    division.innerHTML = ``;\r\n\r\n                    mainContainer.append(division);\r\n\r\n                    //clears the value in the form to make it a little easier to type in a new movie name\r\n                    robotName.value = \"\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const ShowProducts = () => {\r\n        return (\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row\">\r\n                    {theProducts.map(product => ( // map reads the whole theProducts array element-by-element\r\n                        <div key={product.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\r\n                            <div className=\"card\">\r\n                                <img src={product.image} className=\"card-img-top\" alt={product.title} style={{ objectFit: 'cover', height: '200px' }} />\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">{product.title}</h5>\r\n                                    <p style={{ textAlign: \"center\", fontSize: \"20px\", color: \"green\" }}>${product.price}</p>\r\n                                    <p className=\"card-text\"><b>Description</b> - {product.description}</p>\r\n                                    <p className=\"card-text\"><b>Tag</b> - {product.category}</p>\r\n                                    <p className=\"card-text\"><b>Rating:</b> {product.rating.rate} from {product.rating.count} people</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <p style={{ display: \"inline-block\" }}>Product id: <input type=\"text\" name=\"inputProductName\"></input></p>\r\n                <button type=\"button\" onclick=\"getInputRobot();\">One Product</button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (<div>\r\n        <ShowProducts />\r\n    </div>);\r\n}\r\n\r\nexport default Products;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}