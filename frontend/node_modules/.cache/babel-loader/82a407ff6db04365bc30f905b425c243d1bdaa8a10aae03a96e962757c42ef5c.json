{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caden Otis\\\\COM-S-319-Assignments\\\\assignment_3\\\\frontend\\\\src\\\\Products.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Products() {\n  _s();\n  const [theProducts, setTheProducts] = useState([]);\n  useEffect(() => {\n    // Read the data of robots from the database:\n    fetch(\"http://localhost:8081/listProducts\").then(response => response.json()).then(products => setTheProducts(products));\n  }, []); // the empty brackets here means that useEffect() will only run on the first render\n\n  // fetches one robot that matches the input in the search bar\n  function getInputRobot() {\n    alert(\"test\");\n  }\n  const ShowProducts = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: theProducts.map(product =>\n          /*#__PURE__*/\n          // map reads the whole theProducts array element-by-element\n          _jsxDEV(\"div\", {\n            className: \"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: product.image,\n                className: \"card-img-top\",\n                alt: product.title,\n                style: {\n                  objectFit: 'cover',\n                  height: '200px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: product.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    textAlign: \"center\",\n                    fontSize: \"20px\",\n                    color: \"green\"\n                  },\n                  children: [\"$\", product.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 66\n                  }, this), \" - \", product.description]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Tag\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 66\n                  }, this), \" - \", product.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Rating:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 66\n                  }, this), \" \", product.rating.rate, \" from \", product.rating.count, \" people\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this)\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"searchedRobot\",\n          class: \"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-lg-5 g-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: [\"Product id: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"inputProductName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: getInputRobot,\n          children: \"One Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ShowProducts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n}\n_s(Products, \"r+NVqgUoINPFiBxGM8A7oN9zSwc=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Products","_s","theProducts","setTheProducts","fetch","then","response","json","products","getInputRobot","alert","ShowProducts","children","className","map","product","src","image","alt","title","style","objectFit","height","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","fontSize","color","price","description","category","rating","rate","count","id","class","display","type","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Caden Otis/COM-S-319-Assignments/assignment_3/frontend/src/Products.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction Products() {\r\n    const [theProducts, setTheProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Read the data of robots from the database:\r\n        fetch(\"http://localhost:8081/listProducts\")\r\n            .then(response => response.json())\r\n            .then(products => setTheProducts(products));\r\n\r\n    }, []); // the empty brackets here means that useEffect() will only run on the first render\r\n\r\n    // fetches one robot that matches the input in the search bar\r\n    function getInputRobot() {\r\n        alert(\"test\");\r\n    }\r\n\r\n    const ShowProducts = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"container mt-3\">\r\n                    <div className=\"row\">\r\n                        {theProducts.map(product => ( // map reads the whole theProducts array element-by-element\r\n                            <div key={product.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\r\n                                <div className=\"card\">\r\n                                    <img src={product.image} className=\"card-img-top\" alt={product.title} style={{ objectFit: 'cover', height: '200px' }} />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{product.title}</h5>\r\n                                        <p style={{ textAlign: \"center\", fontSize: \"20px\", color: \"green\" }}>${product.price}</p>\r\n                                        <p className=\"card-text\"><b>Description</b> - {product.description}</p>\r\n                                        <p className=\"card-text\"><b>Tag</b> - {product.category}</p>\r\n                                        <p className=\"card-text\"><b>Rating:</b> {product.rating.rate} from {product.rating.count} people</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div id=\"searchedRobot\" class=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-lg-5 g-3\"></div>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <p style={{ display: \"inline-block\" }}>Product id: <input type=\"text\" name=\"inputProductName\"></input></p>\r\n                    <button type=\"button\" onClick={getInputRobot}>One Product</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (<div>\r\n        <ShowProducts />\r\n    </div>);\r\n}\r\n\r\nexport default Products;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}